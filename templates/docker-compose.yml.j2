version: "3.8"
services:

  postgres:
    image: postgres:{{ postgres_version }}
    container_name: postgres
    environment:
      POSTGRES_USER: {{ postgres_user }}
      POSTGRES_PASSWORD: {{ postgres_password }}
      POSTGRES_DB: {{ postgres_db }}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backups:/backups
    restart: always

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://{{ postgres_user }}:{{ postgres_password }}@postgres:5432/{{ postgres_db }}?sslmode=disable"
      EXTENSIONS: "pg_stat_statements"
    ports:
      - "9187:9187"
    restart: always
    depends_on:
      - postgres

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./postgres_alerts.yml:/etc/prometheus/postgres_alerts.yml
    ports:
      - "9090:9090"
    restart: always
    depends_on:
      - postgres_exporter

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    restart: always
    depends_on:
      - prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8081:8080"  # 8080 interne → 8081 hôte
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: always

  pgbench:
    image: postgres:{{ postgres_version }}
    container_name: pgbench
    command: sleep infinity   # Conteneur reste actif pour exécuter pgbench à la demande
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword123
      POSTGRES_DB: mydb
    depends_on:
      - postgres
    networks:
      - default

volumes:
  pgdata:

